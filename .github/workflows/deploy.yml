name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Create application.properties
      run: |
        mkdir -p src/main/resources
        echo "spring.application.name=study-group" > src/main/resources/application.properties
        echo "kakao.apikey=815edb7e2bc243e280f527ca4de5117c" >> src/main/resources/application.properties
        echo "kakao.redirect-uri=http://localhost:8080/user/kakao/callback" >> src/main/resources/application.properties
        echo "jwt.secret.key=OssaD4FoPe7BreiqedEKuVmPXRbnvl24WCNUV7PIPmTpDZftVGC7Xrxd1UPxAw91YP8qlYK5lMlWwut44x0mg" >> src/main/resources/application.properties
        echo "spring.datasource.url=jdbc:mysql://${{ secrets.MYSQL_HOST }}:3306/study" >> src/main/resources/application.properties
        echo "spring.datasource.username=${{ secrets.MYSQL_USERNAME }}" >> src/main/resources/application.properties
        echo "spring.datasource.password=${{ secrets.MYSQL_PASSWORD }}" >> src/main/resources/application.properties
        echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> src/main/resources/application.properties
        echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties
        echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect" >> src/main/resources/application.properties

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # 빌드된 파일 확인
    - name: List build/libs directory
      run: ls -la build/libs/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Install SSH client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Configure SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Deploy JAR to EC2
      run: |
        scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/*.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/trelloServer.jar

    - name: Restart application on EC2
      run: |
        ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << EOF
        # Kill existing Java process
        pkill -f 'trelloServer.jar' || echo "No existing process found."

        # Run the new JAR file
        nohup java -jar /home/ubuntu/trelloServer.jar > /home/ubuntu/app.log 2>&1 &
        EOF

    - name: Clean up
      run: rm -f private_key.pem
